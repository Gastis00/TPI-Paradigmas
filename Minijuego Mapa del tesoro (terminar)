| bandera tamaño dimension mapaMostrar posTesoro filaTesoro columnaTesoro jugador1 jugador2 acerto1 acerto2 intentos1 intentos2 mapa rta1 rta2|

intentos1:=0.
jugador1:= 1.
acerto1:= false.
posTesoro:= 0.

intentos2:=0.
acerto2:= false.
jugador2:= 2.

dimension := 8. "dimension del mapa"
tamaño := (dimension * dimension). "tamaño del mapa"
Transcript clear.
Transcript show: '---MINIJUEGO BÚSQUEDA DEL TESORO---' ; cr.
Transcript show: 'Se presentara un mapa de 64 jugadores' ; cr.
Transcript show: 'Se jugara en diferido, cada uno en su turno' ; cr.
Transcript show: 'El jugador que encuentre primero encuentre el tesoro, sera el ganador' ; cr.

UIManager default request: 'Presione ENTER cuando este preparado'. 
Transcript cr. "para que se vea mejor"

"CREA MAPA 1"
	
"JUGADOR 1"
mapa:= Array new: tamaño. "mapa con los resultados (no se muestra)"
mapaMostrar:= Array new: tamaño. "mapa que va marcando el jugador"
	
"carga los mapas"
1 to: (tamaño) do: [:i|
	mapa at: i put: ' F'. "carga todas las posiciones con frio"
	mapaMostrar at: i put: (i asString). "carga todas las posiciones del 1 al 64"
	].

filaTesoro := (1 to: dimension) atRandom.
columnaTesoro := (1 to: dimension) atRandom.
posTesoro := ( ( (filaTesoro-1) * dimension ) + columnaTesoro).
mapa at: (posTesoro) put: ' X'.
	
	
"uno Arriba"
((filaTesoro - 1) > (0)) ifTrue: [ 
		
	mapa at: ((((filaTesoro - 1) -1) * dimension) + (columnaTesoro)) put: ' C'. "caliente"
		
	"controlo tibio porque si no esta caliente, no va a estar el tibio"
	"dos Arriba"
	(filaTesoro - 2) > (0) ifTrue: [ 
			
		mapa at: ((((filaTesoro - 2) -1) * dimension) + (columnaTesoro)) put: ' T'.
			
		"dos Arriba uno izquierda"
		(((filaTesoro - 2) > (0)) and: ((columnaTesoro - 1) > (0))) ifTrue: [ 
				
			mapa at: ((((filaTesoro - 2) -1) * dimension) + (columnaTesoro - 1)) put: ' T'.
			].
		"dos Arriba uno derecha"
		(((filaTesoro - 2) > (0)) and: ((columnaTesoro + 1) <= (dimension))) ifTrue: [ 
				
			mapa at: ((((filaTesoro - 2) -1) * dimension) + (columnaTesoro + 1)) put: ' T'.
			].
			
		].
	].
	
	
"uno Abajo"
((filaTesoro + 1) <= (dimension)) ifTrue: [ 
		
	mapa at: ((((filaTesoro + 1) -1) * dimension) + (columnaTesoro)) put: ' C'.
		
	"dos Abajo"
	((filaTesoro + 2) <= (dimension)) ifTrue: [ 
		
		mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro)) put: ' T'.
			
		"dos Abajo uno izquierda"
		(((filaTesoro + 2) <= (dimension)) and: ((columnaTesoro - 1) > (0))) ifTrue: [ 
				
			mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro - 1)) put: ' T'.
			].
		"dos Abajo uno derecha"
		(((filaTesoro + 2) <= (dimension)) and: ((columnaTesoro + 1) <= (dimension))) ifTrue: [ 
				
			mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro + 1)) put: ' T'.
			].
			
		].
	].
	
	
"uno Izquierda"
(columnaTesoro - 1) > (0) ifTrue: [ 
		
	mapa at: ((((filaTesoro) - 1) * dimension) + (columnaTesoro - 1)) put: ' C'.
		
	"dos Izquierda"
	(filaTesoro + 2) > (0) ifTrue: [ 
		
		mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro)) put: ' T'.
			
		"uno Arriba dos izquierda"
		(((filaTesoro - 1) > (0)) and: ((columnaTesoro - 2) > (0))) ifTrue: [ 
				
			mapa at: ((((filaTesoro - 1) -1) * dimension) + (columnaTesoro - 2)) put: ' T'.
			].
		"uno abajo dos izquierda"
		(((filaTesoro + 1) <= (dimension)) and: ((columnaTesoro - 2) > (0))) ifTrue: [ 
				
			mapa at: ((((filaTesoro + 1) -1) * dimension) + (columnaTesoro - 2)) put: ' T'.
			].
			
		].
	].


"uno Derecha"
(columnaTesoro + 1) <= (dimension) ifTrue: [ 
		
	mapa at: (((filaTesoro - 1) * dimension) + (columnaTesoro + 1)) put: ' C'.
		
	"dos Derecha"
	(columnaTesoro + 2) <= (dimension) ifTrue: [ 
		
		mapa at: ((((filaTesoro) -1) * dimension) + (columnaTesoro + 2)) put: ' T'.
			
		"uno Arriba dos derecha"
		(((filaTesoro - 1) > (0)) and: ((columnaTesoro + 2) <= (dimension))) ifTrue: [ 
				
			mapa at: ((((filaTesoro - 1) -1) * dimension) + (columnaTesoro + 2)) put: ' T'.
			].
		"uno abajo dos derecha"
		(((filaTesoro + 1) <= (dimension)) and: ((columnaTesoro + 2) <= (dimension))) ifTrue: [ 
				
			mapa at: ((((filaTesoro + 1) -1) * dimension) + (columnaTesoro + 2)) put: ' T'.
			].
						
		].
	].
	
	
"Diagonal uno Arriba uno Izquierda"
(((filaTesoro - 1) > (0)) and: ((columnaTesoro - 1) > (0))) ifTrue: [ 
		
	mapa at: ((((filaTesoro - 1) -1) * dimension) + (columnaTesoro - 1)) put: ' C'.
		
	"Diagonal dos Arriba dos Izquierda"
	(((filaTesoro - 2) > (0)) and: ((columnaTesoro - 2) > (0))) ifTrue: [
			
		mapa at: ((((filaTesoro - 2) -1) * dimension) + (columnaTesoro - 2)) put: ' T'.
		].
	].	
	
	
"Diagonal uno Arriba uno Derecha"
(((filaTesoro - 1) > (0)) and: ((columnaTesoro + 1) <= (dimension))) ifTrue: [
		
	mapa at: ((((filaTesoro - 1) -1) * dimension) + (columnaTesoro + 1)) put: ' C'.
		
	"Diagonal dos Arriba dos Derecha"
	(((filaTesoro - 2) > (0)) and: ((columnaTesoro + 2) <= (dimension))) ifTrue: [
			
		mapa at: ((((filaTesoro - 2) -1) * dimension) + (columnaTesoro + 2)) put: ' T'.
		].
	].
	
	
"Diagonal uno Abajo uno Izquierda"
(((filaTesoro + 1) <= (dimension)) and: ((columnaTesoro - 1) > (0))) ifTrue: [
		
	mapa at: ((((filaTesoro + 1) -1) * dimension) + (columnaTesoro - 1)) put: ' C'.
		
	"Diagonal dos Abajo dos Izquierda"
	(((filaTesoro + 2) <= (dimension)) and: ((columnaTesoro - 2) > (0))) ifTrue: [
			
		mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro - 2)) put: ' T'.
		].
	].	
	
	
"Diagonal uno Abajo uno Derecha"
(((filaTesoro + 1) <= (dimension)) and: ((columnaTesoro + 1) <= (dimension))) ifTrue: [
		
	mapa at: ((((filaTesoro + 1) -1) * dimension) + (columnaTesoro + 1)) put: ' C'.
		
	"Diagonal dos Abajo dos Derecha"
	(((filaTesoro + 2) <= (dimension)) and: ((columnaTesoro + 2) <= (dimension))) ifTrue: [
			
		mapa at: ((((filaTesoro + 2) -1) * dimension) + (columnaTesoro + 2)) put: ' T'.
		].
	].



	
"PASAN A JUGAR"
[(acerto1 not)] whileTrue: [ 	
	
	Transcript clear.
	Transcript show: 'MAPA JUGADOR 1', (jugador1 asString) ;cr.
	"MOSTRAR MATRIZ"
	1 to: (dimension) do:[ :fila|
		Transcript show: '|'.
		1 to: (dimension) do:[ :columna|
		
			bandera := ((mapaMostrar at: ((fila-1)*dimension)+columna) asInteger) isInteger. "controla si es un numero"
			"queda mas facha si es de un digito"
			(bandera) ifTrue: [ 
				((((mapaMostrar at: ((fila-1)*dimension)+columna) asInteger) <= 9)) ifTrue: [ 
					Transcript show: ' ', '0', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
					]
				ifFalse: [ "si es mayor a 9 el entero"
					Transcript show: ' ', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
					].
				]
			ifFalse: [ "si es una letra"
				Transcript show: ' ', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
				].
			
			].
		
		Transcript show: '|'.
		Transcript cr.
		].
			
	rta1:= UIManager default chooseFrom: mapaMostrar message: 'Seleccione un casillero' title: 'EL MAPA DEL TESORO'.
	intentos1:= intentos1 + 1.
		
	"CONTROLO SI GANÓ"
	(rta1 = posTesoro) ifTrue:[
		acerto1:= true.
		mapaMostrar at: rta1 put: (mapa at:rta1) asString. "carga el tesoro"
		] 
	ifFalse: [ 
		Transcript show: (mapa at: rta1) asString.
		mapaMostrar at: rta1 put: (mapa at:rta1) asString.
		].
	
	].

Transcript clear.
Transcript show: 'MAPA JUGADOR 1' ; cr.
"MOSTRAR MATRIZ"
1 to: (dimension) do:[ :fila|
	Transcript show: '|'.
	1 to: (dimension) do:[ :columna|
		
		bandera := ((mapaMostrar at: ((fila-1)*dimension)+columna) asInteger) isInteger. "controla si es un numero"
		"queda mas facha si es de un digito"
		(bandera) ifTrue: [ 
			((((mapaMostrar at: ((fila-1)*dimension)+columna) asInteger) <= 9)) ifTrue: [ 
				Transcript show: ' ', '0', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
				]
			ifFalse: [ "si es mayor a 9 el entero"
				Transcript show: ' ', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
				].
			]
		ifFalse: [ "si es una letra"
			Transcript show: ' ', (mapaMostrar at: ((fila-1)*dimension)+columna) asString , ' '.
			].
			
		].
	Transcript show: '|'.
	Transcript cr.
	].

Transcript cr.
Transcript show: '¡ FELICIDADES HAS ENCONTRADO EL TESORO !'.

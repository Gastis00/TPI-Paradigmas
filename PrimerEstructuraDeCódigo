| tablero modJuego minigame atacante defensor games vencedor decision |

games := Game new.
tablero := Tablero new.

"Mostrar las opciones en el transcript"

modJuego := (UIManager default request: 'Ingrese el modo de juego a jugar') asInteger.

"Controlar imput en modo de juego"

tablero cantJugadores: modJuego.

1 to: (tablero cantJugadores) do: [ :c|
	"Mostrar minijuegos a elegir en el transcript"
	minigame := (UIManager default request: 'Ingrese el mini juego con el que desea empezar') asInteger.
	"Controlo imput ingresado"
	tablero inicializarJugador: (UIManager default request: 'Ingrese su nickname') minijuego: minigame tablero: tablero numero: c
	 ].

tablero sumarRonda.
decision := false.

"Metodo actualizar mapa"
[ (tablero ronda) ~= ((tablero cantJugadores) - 2) ] whileTrue: [
	
	(decision) ifFalse: [ atacante:= tablero tirarDadoJugador.] ifTrue: [ 
		atacante := vencedor.
		 ].
	"Metodo Lucha"
		defensor := atacante elegirRival.
		games atacante: atacante defensor: defensor.
		vencedor := games jugar.
		(vencedor = atacante) ifTrue: [ 
			atacante procedimientoPostCombate: defensor tablero: tablero ] 
		ifFalse: [ 
			defensor procedimientoPostCombate: atacante tablero: tablero].
	"Metodo actualizar mapa"
	tablero sumarRonda.
	(((tablero ronda) \\ (tablero dueloExtra))= 0) ifTrue: [ "metodo duelo extra (sumar ronda incluido)" ].
	"Metodo actualizar mapa"
	decision := true."Metodo que devuelva True si quiere elegir otro rival sino false"		
	].

"Metodo Duelo final"

"Metodo mostrar resultados finales"
